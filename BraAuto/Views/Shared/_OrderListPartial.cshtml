@model BraAuto.ViewModels.Pager

@{
    var queryString = this.Context.Request.Query.ToNameValueCollection();
}

<div class="car-filter-option">
    <div class="row">
        <div class="col-lg-6 col-md-6">
            <div class="car-filter-option-item">
                <div class="dropdown">
                    <button type="button" class="btn btn-page-size btn-no-outline dropdown-toggle btn-white" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Show @Model.PageSize <span class="caret"></span>
                    </button>
                    <div class="dropdown-menu mb-2">
                        @foreach (var pageSize in Model.PageSizes)
                        {
                            <a class="dropdown-item" href="@Url.Action(Url.CurrentAction(), null, queryString: this.Context.Request.Query.ToNameValueCollection().RemoveIfExists("page", ignoreCase: true).AddOrSet("rowCount", pageSize.ToString(), ignoreCase: true))">@pageSize</a>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6 col-md-6">
            <div class="car-filter-option-item car-filter-option-item--right">
                <div class="dropdown">
                    <button type="button" class="btn btn-page-size btn-no-outline dropdown-toggle btn-white" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Sort By: @Model.SortBy.ToSortByText(Model.SortDesc) <span class="caret"></span>
                    </button>
                    <div class="dropdown-menu mb-2">
                        @if (Model.ShowSpecificSortFields)
                        {
                            foreach (var sortField in Model.SortFields.Where(sf => sf.Specific))
                            {
                                <a class="dropdown-item" href="@Url.Action(Url.CurrentAction(), null, queryString: this.Context.Request.Query.ToNameValueCollection().RemoveIfExists("page", ignoreCase: true).AddOrSet("sortBy", sortField.SortColumn, ignoreCase: true).AddOrSet("sortDesc", sortField.SortDesc.ToString(), ignoreCase: true))">@sortField.Name</a>
                            }
                        }
                        @foreach (var sortField in Model.SortFields.Where(sf => !sf.Specific))
                        {
                            <a class="dropdown-item" href="@Url.Action(Url.CurrentAction(), null, queryString: this.Context.Request.Query.ToNameValueCollection().RemoveIfExists("page", ignoreCase: true).AddOrSet("sortBy", sortField.SortColumn, ignoreCase: true).AddOrSet("sortDesc", sortField.SortDesc.ToString(), ignoreCase: true))">@sortField.Name</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>